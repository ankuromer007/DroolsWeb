package com.neevtech.droolsweb.services.impl

import com.neevtech.droolsweb.model.UserBean;
import com.neevtech.droolsweb.model.ItemBean;
import com.neevtech.droolsweb.model.CurrentDateTime;
global org.slf4j.Logger logger;

rule "Insert CurrentDateTime in knowledgebase"
lock-on-active true
salience 1

	when
		not CurrentDateTime()
	then
		insert( new CurrentDateTime() );
		logger.info("RuleName: {}", drools.getRule().getName());
end

rule "For US Location - 1st Occasion"

	when
		$user: UserBean( location  == "US" )
		$currentDateTime: CurrentDateTime( date >= 26 && month == 4 || date <= 10 && month == 5 )
		$item: ItemBean()
	then
		$item.addtDiscount(30);
		logger.info("RuleName: {}", drools.getRule().getName());
end

rule "For US Location - 2nd Occasion"

	when
		$user: UserBean( location  == "US" )
		$currentDateTime: CurrentDateTime( date >= 13 && month == 5 || date <= 27 && month == 5 )
		$item: ItemBean()
	then
		$item.addtDiscount(30);
		logger.info("RuleName: {}", drools.getRule().getName());
end

rule "For US Location - 3rd Occasion"

	when
		$user: UserBean( location  == "US" )
		$currentDateTime: CurrentDateTime( date >= 20 && month == 6 || date <= 4 && month == 7 )
		$item: ItemBean()
	then
		$item.addtDiscount(30);
		logger.info("RuleName: {}", drools.getRule().getName());
end

rule "For UK Location - 1st Occasion"

	when
		$user: UserBean( location  == "UK" )
		$currentDateTime: CurrentDateTime( date >= 27 && month == 4 || date <= 11 && month == 5 )
		$item: ItemBean()
	then
		$item.addtDiscount(20);
		logger.info("RuleName: {}", drools.getRule().getName());
end

rule "For UK Location - 2nd Occasion"

	when
		$user: UserBean( location  == "UK" )
		$currentDateTime: CurrentDateTime( date >= 13 && month == 5 || date <= 27 && month == 5 )
		$item: ItemBean()
	then
		$item.addtDiscount(20);
		logger.info("RuleName: {}", drools.getRule().getName());
end

rule "For UK Location - 3rd Occasion"

	when
		$user: UserBean( location  == "UK" )
		$currentDateTime: CurrentDateTime( date >= 11 && month == 12 || date <= 25 && month == 12 )
		$item: ItemBean()
	then
		$item.addtDiscount(20);
		logger.info("RuleName: {}", drools.getRule().getName());
end

rule "For INDIA Location - 1st Occasion"

	when
		$user: UserBean( location  == "INDIA" )
		$currentDateTime: CurrentDateTime( date >= 25 && month == 4 || date <= 9 && month == 5 )
		$item: ItemBean()
	then
		$item.addtDiscount(40);
		logger.info("RuleName: {}", drools.getRule().getName());
end

rule "For INDIA Location - 2nd Occasion"

	when
		$user: UserBean( location  == "INDIA" )
		$currentDateTime: CurrentDateTime( date >= 11 && month == 5 || date <= 25 && month == 5 )
		$item: ItemBean()
	then
		$item.addtDiscount(40);
		logger.info("RuleName: {}", drools.getRule().getName());
end

rule "For INDIA Location - 3rd Occasion"

	when
		$user: UserBean( location  == "INDIA" )
		$currentDateTime: CurrentDateTime( date >= 1 && month == 9 || date <= 15 && month == 9 )
		$item: ItemBean()
	then
		$item.addtDiscount(40);
		logger.info("RuleName: {}", drools.getRule().getName());
end

rule "Retract CurrentDateTime from knowledgebase"
salience -1

	when
		$currentDateTime: CurrentDateTime()
	then
		retract( $currentDateTime );
		logger.info("RuleName: {}", drools.getRule().getName());
end