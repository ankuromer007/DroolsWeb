package com.neevtech.droolsweb.services.impl

import com.neevtech.droolsweb.model.UserBean;
import com.neevtech.droolsweb.model.ItemBean;
import com.neevtech.droolsweb.model.CurrentDateTime;
global org.apache.log4j.Logger logger;

rule "Insert CurrentDateTime in knowledgeSession"
salience 1

	when
		not CurrentDateTime()
		exists UserBean()
		exists ItemBean()
	then
		insert( new CurrentDateTime() );
		logger.info("RuleName: "+ drools.getRule().getName());
end

rule "For US Location - 1st Occasion"
activation-group "US"

	when
		UserBean( location  == "US" )
		$currentDateTime: CurrentDateTime()
		eval( $currentDateTime.isDiscountApplicable( 27, 8, 10, 9 ) )
		$item: ItemBean()
	then
		$item.addDiscount(30);
		logger.info("RuleName: "+ drools.getRule().getName());
end

rule "For US Location - 2nd Occasion"

	when
		UserBean( location  == "US" )
		$currentDateTime: CurrentDateTime()
		eval( $currentDateTime.isDiscountApplicable( 13, 5, 27, 5 ) )
		$item: ItemBean()
	then
		$item.addDiscount(30);
		logger.info("RuleName: "+ drools.getRule().getName());
end

rule "For US Location - 3rd Occasion"
activation-group "US"

	when
		UserBean( location  == "US" )
		$currentDateTime: CurrentDateTime()
		eval( $currentDateTime.isDiscountApplicable( 17, 8, 31, 8 ) )
		$item: ItemBean()
	then
		$item.addDiscount(30);
		logger.info("RuleName: "+ drools.getRule().getName());
end

rule "For UK Location - 1st Occasion"

	when
		UserBean( location  == "UK" )
		$currentDateTime: CurrentDateTime()
		eval( $currentDateTime.isDiscountApplicable( 22, 8, 5, 9 ) )
		$item: ItemBean()
	then
		$item.addDiscount(20);
		logger.info("RuleName: "+ drools.getRule().getName());
end

rule "For UK Location - 2nd Occasion"

	when
		UserBean( location  == "UK" )
		$currentDateTime: CurrentDateTime()
		eval( $currentDateTime.isDiscountApplicable( 20, 9, 5, 10 ) )
		$item: ItemBean()
	then
		$item.addDiscount(20);
		logger.info("RuleName: "+ drools.getRule().getName());
end

rule "For UK Location - 3rd Occasion"

	when
		UserBean( location  == "UK" )
		$currentDateTime: CurrentDateTime()
		eval( $currentDateTime.isDiscountApplicable( 11, 12, 25, 12 ) )
		$item: ItemBean()
	then
		$item.addDiscount(20);
		logger.info("RuleName: "+ drools.getRule().getName());
end

rule "For INDIA Location - 1st Occasion"

	when
		UserBean( location  == "INDIA" )
		$currentDateTime: CurrentDateTime()
		eval( $currentDateTime.isDiscountApplicable( 25, 4, 9, 5 ) )
		$item: ItemBean()
	then
		$item.addDiscount(40);
		logger.info("RuleName: "+ drools.getRule().getName());
end

rule "For INDIA Location - 2nd Occasion"

	when
		UserBean( location  == "INDIA" )
		$currentDateTime: CurrentDateTime()
		eval( $currentDateTime.isDiscountApplicable( 17, 8, 31, 7 ) )
		$item: ItemBean()
	then
		$item.addDiscount(40);
		logger.info("RuleName: "+ drools.getRule().getName());
end

rule "For INDIA Location - 3rd Occasion"

	when
		UserBean( location  == "INDIA" )
		$currentDateTime: CurrentDateTime()
		eval( $currentDateTime.isDiscountApplicable( 17, 9, 1, 10 ) )
		$item: ItemBean()
	then
		$item.addDiscount(40);
		logger.info("RuleName: "+ drools.getRule().getName());
end

rule "Retract facts from knowledgeSession"
salience -1

	when
		$currentDateTime: CurrentDateTime()
		$user: UserBean()
		$item: ItemBean()
	then
		retract( $currentDateTime );
		retract( $user );
		retract( $item );
		logger.info("RuleName: "+ drools.getRule().getName());
end
